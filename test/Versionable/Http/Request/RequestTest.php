<?php
namespace Versionable\Http\Request;


require_once 'src/Versionable/Http/Request/Request.php';
require_once 'src/Versionable/Http/Request/RequestInterface.php';

require_once 'src/Versionable/Http/Parameter/ParameterInterface.php';
require_once 'src/Versionable/Http/Parameter/Parameter.php';
require_once 'src/Versionable/Http/Parameter/CollectionInterface.php';
require_once 'src/Versionable/Http/Parameter/Collection.php';


/**
 * Test class for Request.
 * Generated by PHPUnit on 2011-01-23 at 15:34:14.
 */
class RequestTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Request
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Request;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testSetUrl().
     */
    public function testSetUrl()
    {
      $url = $this->getMock('Versionable\\Http\\Url\\Url', array(), array('http://testing.com'));
      $this->object->setUrl($url);
      $this->assertEquals($this->readAttribute($this->object, 'url'), $url);
    }

    /**
     * @todo Implement testGetUrl().
     */
    public function testGetUrl()
    {
      $url = $this->getMock('Versionable\\Http\\Url\\Url', array(), array('http://testing.com'));
      $this->object->setUrl($url);
      $this->assertEquals($this->readAttribute($this->object, 'url'), $this->object->getUrl());
    }

    /**
     * @todo Implement testHasBody().
     */
    public function testHasBody()
    {
      $this->assertFalse($this->object->hasBody());
      
      $this->object->setBody('some body');

      $this->assertTrue($this->object->hasBody());
    }

    /**
     * @todo Implement testGetBody().
     */
    public function testGetBody()
    {
      $this->object->setBody('body');
      $body = $this->readAttribute($this->object, 'body');
      
      $string = 'a=b';
      $parameters = $this->getMock('Versionable\\Http\\Parameter\\Collection');
      $parameters->expects($this->any())->method('toString')->will($this->returnValue($string));
      
      $this->object->setParameters($parameters);
      $this->assertEquals($body . $string, $this->object->getBody());
    }

    /**
     * @todo Implement testSetBody().
     */
    public function testSetBody()
    {
      $text = 'some text';
      $this->object->setBody($text);
      $body = $this->readAttribute($this->object, 'body');
      $this->assertEquals($text, $body);

    }

    /**
     * @todo Implement testSetParameters().
     */
    public function testSetParameters()
    {
      $parameters = $this->getMock('Versionable\\Http\\Parameter\\Collection');
      $this->object->setParameters($parameters);
      $this->assertEquals($parameters, $this->readAttribute($this->object, 'parameters'));
    }

    /**
     * @todo Implement testGetParameters().
     */
    public function testGetParameters()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testHasParameters().
     */
    public function testHasParameters()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetFiles().
     */
    public function testSetFiles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetFiles().
     */
    public function testGetFiles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testHasFiles().
     */
    public function testHasFiles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetMethod().
     */
    public function testGetMethod()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetHeaders().
     */
    public function testGetHeaders()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetHeaders().
     */
    public function testSetHeaders()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testHasHeaders().
     */
    public function testHasHeaders()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testHasCookies().
     */
    public function testHasCookies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetCookies().
     */
    public function testGetCookies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetCookies().
     */
    public function testSetCookies()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetMethod().
     */
    public function testSetMethod()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetPort().
     */
    public function testGetPort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetPort().
     */
    public function testSetPort()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetVersion().
     */
    public function testGetVersion()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetVersion().
     */
    public function testSetVersion()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testToString().
     */
    public function testToString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement test__toString().
     */
    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
?>
